<html>
    <head>
        <link rel="stylesheet" href="https://unpkg.com/ress/dist/ress.min.css">
        <%= stylesheet_link_tag "java4", :media => "all" %>
    </head>

    <body>
 <header>
      </header>
      
      <div class="text-center">
    <p class="html-link"><%= link_to "HTML CSS学習", root_path %></p>
    <p class="java-link"><%= link_to "Java学習①", java_path %></p>
    <p class="java-link"><%= link_to "Java学習②", java2_path %></p>
    <p class="java-link"><%= link_to "Javaプログラムコード集", java3_path %></p>
    <p class="java-link"><%= link_to "PHP", php_path %></p>
    
    <p class="title">Java学習記録③</p>
    
    <p class="title2">内部クラスについて</p>
    <p class="text">内部クラスとは、その名のとおり、クラスの中にあるクラスのこと<br>
    クラスは通常、1ファイルの中に1つだけ定義することが多いが言語仕様上は、1ファイルの中に複数のクラスを持つことができる。<br>
    その中で、クラスの中に定義するクラスを、<strong>内部クラス</strong>と呼ぶ。クラスAの中に、内部クラスBを持つ例が以下のコード</p>
<p class="java-code">
    <pre>
public class A {
    public class B {
    }
}
</pre>
</p>
    
    <p class="text">内部クラスBの中に、さらに内部クラスCを持つ例が以下のコード。</p>
    <p class="java-code">
        <pre>
public class A {
    public class B {
        public class C {
        }
    }
}
        </pre>
    </p>
<p class="text">内部クラスではなくても、1ファイルに複数のクラスを持つこともできる。この場合は内部クラスではない。</p>
<p class="java-code">
    <pre>
public class A {
}

class B {
}
    </pre>
</p>

<p class="title2">内部クラスの使い方</p>
<p class="text">内部クラスもクラスと同じようにインスタンス化できますが、以下のような制限がある<br>
・staticクラスは、クラス外から直接インスタンス化できる<br>
・非staticクラスは、外部クラスのインスタンスからのみインスタンス化できる<br>
なお、非staticな場合のみ内部クラスと呼び、それ以外は<strong>「ネストしたクラス」</strong>として扱う場合もあります。
</p>
<p class"text">
    <pre>
package inner_class_sample;
public class Outer {
    public class Inner {
    }
}    
</pre>
</p>
<p class="text">このクラスA、Bを、別のクラスCからインスタンス化してみる</p>
<div class="java-code">
<p class="text">
    <pre>
public class Example {
    public static void main(String[] args) {
        Outer outer = new Outer(); // クラスOuterをインスタンス化
        Outer.Inner inner = outer.new Inner(); // クラスOuterの内部クラスInnerをインスタンス化
    }
}

    </pre>
</p>
</div>

    
</p>

</body>
    